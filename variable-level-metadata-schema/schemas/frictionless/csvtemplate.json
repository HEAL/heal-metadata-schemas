{
  "description": "Variable level metadata individual fields integrated into the variable level metadata object within the HEAL platform metadata service.\n",
  "title": "HEAL Variable Level Metadata Fields",
  "fields": [
    {
      "name": "module",
      "description": "Module (a place to put the section, form, or other broad category used  to group variables.\n",
      "title": "Module (i.e., section,form,category)",
      "examples": [
        "Demographics",
        "PROMIS",
        "Substance use",
        "Medical History",
        "Sleep questions",
        "Physical activity"
      ],
      "type": "string"
    },
    {
      "name": "name",
      "description": "The name of a variable (i.e., field) as it appears in the data.\n",
      "title": "Variable Name",
      "type": "string"
    },
    {
      "name": "title",
      "description": "The human-readable title of the variable.",
      "title": "Variable Label (ie Title)",
      "type": "string"
    },
    {
      "name": "description",
      "description": "An extended description of the variable.",
      "title": "Variable Description",
      "examples": [
        "Definition",
        "Question text (if a survey)"
      ],
      "type": "string"
    },
    {
      "name": "type",
      "description": "A classification allowing the user (analyst, researcher or computer) to know how to use the variable\n",
      "title": "Variable Type",
      "type": "string",
      "constraint": {
        "enum": [
          "number",
          "boolean",
          "geopoint",
          "datetime",
          "time",
          "any",
          "duration",
          "year",
          "integer",
          "date",
          "string",
          "yearmonth"
        ]
      }
    },
    {
      "name": "format",
      "description": "Indicates the format of the type specified in the `type` property. This may describe the type of unit (such as for time fields like year or month) or the format of a date field (such as %y%m%d).\n",
      "title": "Variable Format",
      "type": "string"
    },
    {
      "name": "constraints.maxLength",
      "description": "Indicates the maximum length of an iterable (e.g., array, string, or object). For example, if 'Hello World' is the longest value of a categorical variable, this would be a maxLength of 11.\n",
      "title": "Maximum Length",
      "type": "integer"
    },
    {
      "name": "constraints.enum",
      "description": "Constrains possible values to a set of values.",
      "title": "Variable Possible Values",
      "type": "string",
      "constraint": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "constraints.pattern",
      "description": "A regular expression pattern the data MUST conform to.",
      "title": "Regular Expression Pattern",
      "type": "string"
    },
    {
      "name": "constraints.maximum",
      "description": "Specifies the maximum value of a field (e.g., maximum -- or most recent -- date, maximum integer etc). Note, this is different then maxLength property.\n",
      "title": "Maximum Value",
      "type": "integer"
    },
    {
      "name": "encoding",
      "description": "Encodings (and mappings) allow categorical values to be stored as numerical values. IMPORTANT: the ==key should be the value represented IN the data== and the ==value should be the to-be-mapped label==. Many analytic software programs use numerical encodings and some algorithms only support numerical values. Additionally, this field provides a way to store categoricals that are stored as  \"short\" labels (such as abbreviations)\n",
      "title": "Variable Value Encodings (i.e., mappings; value labels)",
      "examples": [
        "0=No|1=Yes",
        "HW=Hello world|GBW=Good bye world|HM=Hi,Mike"
      ],
      "type": "string",
      "constraint": {
        "pattern": "^(?:.*?=.*?(?:\\||$))+$"
      }
    },
    {
      "name": "ordered",
      "description": "Indicates whether a categorical variable is ordered. This variable  is relevant for variables that have an ordered relationship but not necessarily  a numerical relationship (e.g., Strongly disagree < Disagree < Neutral < Agree).\n",
      "title": "An ordered variable",
      "type": "boolean"
    },
    {
      "name": "missingValues",
      "description": "A list of missing values specific to a variable.",
      "title": "Missing Values",
      "type": "string",
      "constraint": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "trueValues",
      "description": "For boolean (true) variable (as defined in type field), this field allows a physical string representation to be cast as true (increasing readability of the field). It can include one or more values.\n",
      "title": "Boolean True Value Labels",
      "examples": [
        "Required|REQUIRED",
        "required|Yes|Y|Checked",
        "Checked",
        "Required"
      ],
      "type": "string",
      "constraint": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "falseValues",
      "description": "For boolean (false) variable (as defined in type field), this field allows a physical string representation to be cast as false (increasing readability of the field) that is not a standard false value. It can include one or more values.\n",
      "title": "Boolean False Value Labels",
      "type": "string",
      "constraint": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "repo_link",
      "description": "A link to the variable as it exists on the home repository, if applicable\n",
      "title": "Variable Repository Link",
      "type": "string"
    },
    {
      "name": "cde_id",
      "description": "The source and id for the NIH Common Data Elements program.",
      "title": "Common Data Element Id",
      "type": "string",
      "constraint": {
        "pattern": "^(?:.*?=.*?(?:\\||$))+$"
      }
    },
    {
      "name": "ontology_id",
      "description": "Ontological information for the given variable as indicated  by the source, id, and relation to the specified classification. One or more ontology classifications can be specified. \n",
      "title": "Ontology ID",
      "type": "string",
      "constraint": {
        "pattern": "^(?:[^|=]*=){3}(?:[^|]*\\|[^|=]*=){2}[^|]*=(?:[^|]*\\|)?$"
      }
    },
    {
      "name": "univar_stats.median",
      "type": "number"
    },
    {
      "name": "univar_stats.mean",
      "type": "number"
    },
    {
      "name": "univar_stats.std",
      "type": "number"
    },
    {
      "name": "univar_stats.min",
      "type": "number"
    },
    {
      "name": "univar_stats.max",
      "type": "number"
    },
    {
      "name": "univar_stats.mode",
      "type": "number"
    },
    {
      "name": "univar_stats.count",
      "type": "integer"
    },
    {
      "name": "univar_stats.twenty_five_percentile",
      "type": "number"
    },
    {
      "name": "univar_stats.seventy_five_percentile",
      "type": "number"
    },
    {
      "name": "univar_stats.cat_marginals",
      "type": "array"
    }
  ]
}