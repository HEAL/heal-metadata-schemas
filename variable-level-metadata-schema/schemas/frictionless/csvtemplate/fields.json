{
  "version": "0.2.0",
  "description": "Variable level metadata individual fields integrated into the variable level\nmetadata object within the HEAL platform metadata service.\n\n!!! note \"Highly encouraged\"\n\n  Only `name` and `description` properties are required. \n  For categorical variables, `constraints.enum` and `enumLabels` (where applicable) properties are highly encouraged. \n  For studies using HEAL or other common data elements (CDEs), `standardsMappings` information is highly encouraged.\n  `type` and `format` properties may be particularly useful for some variable types (e.g. date-like variables)\n",
  "title": "HEAL Variable Level Metadata Fields",
  "fields": [
    {
      "name": "section",
      "description": "The section, form, survey instrument, set of measures  or other broad category used \nto group variables. Previously called \"module.\"\n",
      "title": "Section",
      "examples": [
        "Demographics",
        "PROMIS",
        "Medical History"
      ],
      "type": "string"
    },
    {
      "name": "name",
      "description": "The name of a variable (i.e., field) as it appears in the data. \n",
      "title": "Variable Name",
      "examples": [
        "gender_id"
      ],
      "type": "string",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "title",
      "description": "The human-readable title or label of the variable.\n",
      "title": "Variable Label (ie Title)",
      "examples": [
        "Gender identity"
      ],
      "type": "string"
    },
    {
      "name": "description",
      "description": "An extended description of the variable. This could be the definition of a variable or the \nquestion text (e.g., if a survey). \n",
      "title": "Variable Description",
      "examples": [
        "The participant's age at the time of study enrollment",
        "What is the highest grade or level of school you have completed or the highest degree you have received?"
      ],
      "type": "string",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "type",
      "description": "A classification or category of a particular data element or property expected or allowed in the dataset.\n",
      "title": "Variable Type",
      "type": "string",
      "constraints": {
        "enum": [
          "string",
          "duration",
          "geopoint",
          "any",
          "integer",
          "yearmonth",
          "number",
          "datetime",
          "time",
          "boolean",
          "year",
          "date"
        ]
      }
    },
    {
      "name": "format",
      "description": "Indicates the format of the type specified in the `type` property. \nEach format is dependent on the `type` specified. \nSee [here](https://specs.frictionlessdata.io/table-schema/#types-and-formats) \nfor more information about appropriate `format` values by variable `type`.\n",
      "title": "Variable Format",
      "type": "string"
    },
    {
      "name": "constraints.maxLength",
      "description": "Indicates the maximum length of an iterable (e.g., array, string, or\nobject). For example, if 'Hello World' is the longest value of a\ncategorical variable, this would be a maxLength of 11.\n",
      "title": "Maximum Length",
      "type": "integer"
    },
    {
      "name": "constraints.enum",
      "description": "Constrains possible values to a set of values.\n",
      "title": "Variable Possible Values",
      "examples": [
        "1|2|3|4|5|6|7|8",
        "White|Black or African American|American Indian or Alaska Native|Native Hawaiian or Other Pacific Islander|Asian|Some other race|Multiracial"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "constraints.pattern",
      "description": "A regular expression pattern the data MUST conform to.\n",
      "title": "Regular Expression Pattern",
      "type": "string"
    },
    {
      "name": "constraints.maximum",
      "description": "Specifies the maximum value of a field (e.g., maximum -- or most\nrecent -- date, maximum integer etc). Note, this is different then\nmaxLength property.\n",
      "title": "Maximum Value",
      "type": "integer"
    },
    {
      "name": "constraints.minimum",
      "description": "Specifies the minimum value of a field.\n",
      "title": "Minimum Value",
      "type": "integer"
    },
    {
      "name": "enumLabels",
      "description": "Variable value encodings provide a way to further annotate any value within a any variable type,\nmaking values easier to understand. \n\n\nMany analytic software programs (e.g., SPSS,Stata, and SAS) use numerical encodings and some algorithms\nonly support numerical values. Encodings (and mappings) allow categorical values to be stored as\nnumerical values.\n\nAdditionally, as another use case, this field provides a way to\nstore categoricals that are stored as  \"short\" labels (such as\nabbreviations).\n",
      "title": "Variable Value Encodings (i.e., mappings; value labels)",
      "examples": [
        "0=No|1=Yes",
        "HW=Hello world|GBW=Good bye world|HM=Hi,Mike"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:.*?=.*?(?:\\||$))+$"
      }
    },
    {
      "name": "enumOrdered",
      "description": "Indicates whether a categorical variable is ordered. This variable  is\nrelevant for variables that have an ordered relationship but not\nnecessarily  a numerical relationship (e.g., Strongly disagree < Disagree\n< Neutral < Agree).\n",
      "title": "An ordered variable",
      "type": "boolean"
    },
    {
      "name": "missingValues",
      "description": "A list of missing values specific to a variable.\n",
      "title": "Missing Values",
      "examples": [
        "Missing|Skipped|No preference",
        "Missing"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "trueValues",
      "description": "For boolean (true) variable (as defined in type field), this field allows\na physical string representation to be cast as true (increasing\nreadability of the field). It can include one or more values.\n",
      "examples": [
        "Required|REQUIRED",
        "Yes"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "falseValues",
      "description": "For boolean (false) variable (as defined in type field), this field allows\na physical string representation to be cast as false (increasing\nreadability of the field) that is not a standard false value. It can include one or more values.\n",
      "title": "Boolean False Value Labels",
      "examples": [
        "Not required| NOT REQUIRED",
        "No"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "standardsMappings[0].instrument.url",
      "type": "string"
    },
    {
      "name": "standardsMappings[0].instrument.source",
      "type": "string",
      "constraints": {
        "enum": [
          "heal-cde"
        ]
      }
    },
    {
      "name": "standardsMappings[0].instrument.title",
      "type": "string"
    },
    {
      "name": "standardsMappings[0].instrument.id",
      "type": "string"
    },
    {
      "name": "standardsMappings[0].item.url",
      "description": "The url that links out to the published, standardized mapping.\n",
      "title": "Standards Mapping - Url",
      "examples": [
        "https://cde.nlm.nih.gov/deView?tinyId=XyuSGdTTI"
      ],
      "type": "string"
    },
    {
      "name": "standardsMappings[0].item.source",
      "description": "The source of the standardized variable.\n",
      "title": "Standard Mapping - Source",
      "type": "string"
    },
    {
      "name": "standardsMappings[0].item.id",
      "description": "The id locating the individual mapping within the given source.\n",
      "title": "Standard Mapping - Id",
      "type": "string"
    },
    {
      "name": "relatedConcepts[0].url",
      "description": "The url that links out to the published, standardized concept.\n",
      "title": "Related Concepts - Url",
      "type": "string"
    },
    {
      "name": "relatedConcepts[0].type",
      "description": "The **type** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n",
      "title": "Related concepts - Type",
      "type": "string"
    },
    {
      "name": "relatedConcepts[0].label",
      "description": "A free text **label** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n",
      "title": "Related Concepts - Label",
      "type": "string"
    },
    {
      "name": "relatedConcepts[0].source",
      "description": "The source of the related concept.\n",
      "title": "Related Concepts - Source",
      "examples": [
        "TBD (will have controlled vocabulary)"
      ],
      "type": "string"
    },
    {
      "name": "relatedConcepts[0].id",
      "description": "The id locating the individual mapping within the given source.",
      "title": "Related Concepts - Id",
      "type": "string"
    }
  ],
  "missingValues": [
    ""
  ]
}