{
  "description": "Variable level metadata individual fields integrated into the variable level\nmetadata object within the HEAL platform metadata service.\n\n> Note, only `name` and `description` are required.\n>  Listed at the end of the description are suggested \"priority\" levels in brackets (e.g., [<priority>]):\n  1. [Required]: Needs to be filled out to be valid.\n  2. [Highly recommended]: Greatly help using the data dictionary but not required. \n  3. [Optional, if applicable]: May only be applicable to certain fields.\n  4. [Autopopulated]: These fields are intended to be autopopulated from other fields.\n  5. [Experimental]: These fields are not currently used but are in development.\n",
  "title": "HEAL Variable Level Metadata Fields",
  "fields": [
    {
      "name": "module",
      "description": "The section, form, survey instrument, set of measures  or other broad category used \nto group variables.\n",
      "title": "Module",
      "examples": [
        "Demographics",
        "PROMIS",
        "Substance use",
        "Medical History",
        "Sleep questions",
        "Physical activity"
      ],
      "type": "string"
    },
    {
      "name": "name",
      "description": "The name of a variable (i.e., field) as it appears in the data. \n\n[Required]\n",
      "title": "Variable Name",
      "type": "string",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "title",
      "description": "The human-readable title or label of the variable. \n\n[Highly recommended]\n",
      "title": "Variable Label (ie Title)",
      "examples": [
        "My Variable (for name of my_variable)"
      ],
      "type": "string"
    },
    {
      "name": "description",
      "description": "An extended description of the variable. This could be the definition of a variable or the \nquestion text (e.g., if a survey). \n\n[Required]\n",
      "title": "Variable Description",
      "examples": [
        "Definition",
        "Question text (if a survey)"
      ],
      "type": "string",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "type",
      "description": "The data type of the variable. This categorization allows the researcher to know what operations can be performed\nwith the variable (i.e., statistical test) in addition to telling the computer how to effectively store these data.\n\n[Highly recommended]\n",
      "title": "Variable Type",
      "examples": [
        {
          "number": "A numeric value with optional decimal places. (e.g., 3.14)"
        },
        {
          "integer": "A whole number without decimal places. (e.g., 42)"
        },
        {
          "string": "A sequence of characters. (e.g., \"test\")"
        },
        {
          "any": "Any type of data is allowed. (e.g., true)"
        },
        {
          "boolean": "A binary value representing true or false. (e.g., true)"
        },
        {
          "date": "A specific calendar date. (e.g., \"2023-05-25\")"
        },
        {
          "datetime": "A specific date and time, including timezone information. (e.g., \"2023-05-25T10:30:00Z\")"
        },
        {
          "time": "A specific time of day. (e.g., \"10:30:00\")"
        },
        {
          "year": "A specific year. (e.g., 2023)"
        },
        {
          "yearmonth": "A specific year and month. (e.g., \"2023-05\")"
        },
        {
          "duration": "A length of time. (e.g., \"PT1H\")"
        },
        {
          "geopoint": "A pair of latitude and longitude coordinates. (e.g., [51.5074, -0.1278])"
        }
      ],
      "type": "string",
      "constraints": {
        "enum": [
          "yearmonth",
          "number",
          "datetime",
          "string",
          "any",
          "duration",
          "boolean",
          "date",
          "integer",
          "time",
          "year",
          "geopoint"
        ]
      }
    },
    {
      "name": "format",
      "description": "A format taken from one of the [frictionless specification](https://specs.frictionlessdata.io/) schemas. For example, for tabular data, there is the [Table Schema specification](https://specs.frictionlessdata.io/table-schema)",
      "title": "Frictionless Formats",
      "type": "any"
    },
    {
      "name": "constraints.maxLength",
      "description": "Indicates the maximum length of an iterable (e.g., array, string, or\nobject). For example, if 'Hello World' is the longest value of a\ncategorical variable, this would be a maxLength of 11.\n\n[Optional,if applicable]\n",
      "title": "Maximum Length",
      "type": "integer"
    },
    {
      "name": "constraints.enum",
      "description": "Constrains possible values to a set of values.\n\n[Optional,if applicable]\n",
      "title": "Variable Possible Values",
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "constraints.pattern",
      "description": "A regular expression pattern the data MUST conform to.\n\n[Optional,if applicable]\n",
      "title": "Regular Expression Pattern",
      "type": "string"
    },
    {
      "name": "constraints.maximum",
      "description": "Specifies the maximum value of a field (e.g., maximum -- or most\nrecent -- date, maximum integer etc). Note, this is different then\nmaxLength property.\n\n[Optional,if applicable]\n",
      "title": "Maximum Value",
      "type": "integer"
    },
    {
      "name": "encodings",
      "description": "Variable value encodings provide a way to further annotate any value within a any variable type,\nmaking values easier to understand. \n\n\nMany analytic software programs (e.g., SPSS,Stata, and SAS) use numerical encodings and some algorithms\nonly support numerical values. Encodings (and mappings) allow categorical values to be stored as\nnumerical values.\n\nAdditionally, as another use case, this field provides a way to\nstore categoricals that are stored as  \"short\" labels (such as\nabbreviations).\n\n[Optional,if applicable]\n",
      "title": "Variable Value Encodings (i.e., mappings; value labels)",
      "examples": [
        "0=No|1=Yes",
        "HW=Hello world|GBW=Good bye world|HM=Hi,Mike"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:.*?=.*?(?:\\||$))+$"
      }
    },
    {
      "name": "ordered",
      "description": "Indicates whether a categorical variable is ordered. This variable  is\nrelevant for variables that have an ordered relationship but not\nnecessarily  a numerical relationship (e.g., Strongly disagree < Disagree\n< Neutral < Agree).\n\n[Optional,if applicable]\n",
      "title": "An ordered variable",
      "type": "boolean"
    },
    {
      "name": "missingValues",
      "description": "A list of missing values specific to a variable.\n\n[Highly recommended]\n",
      "title": "Missing Values",
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "trueValues",
      "description": "[Optional,if applicable]\n",
      "examples": [
        "Required|REQUIRED",
        "required|Yes|Y|Checked",
        "Checked",
        "Required"
      ],
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "falseValues",
      "description": "For boolean (false) variable (as defined in type field), this field allows\na physical string representation to be cast as false (increasing\nreadability of the field) that is not a standard false value. It can include one or more values.\n",
      "title": "Boolean False Value Labels",
      "type": "string",
      "constraints": {
        "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
      }
    },
    {
      "name": "repo_link",
      "description": "A link to the variable as it exists on the home repository, if applicable\n",
      "title": "Variable Repository Link",
      "type": "string"
    },
    {
      "name": "cde_id",
      "description": "[DEPRECATED] Use `standardsMapping`. The source and id for the NIH Common Data Elements program.\n",
      "title": "Common Data Element Id",
      "type": "array"
    },
    {
      "name": "ontology_id",
      "description": "[DEPRECATED] - Use `relatedConcepts`. Ontological information for the given variable as indicated  by the\nsource, id, and relation to the specified classification. One or more\nontology classifications can be specified. \n",
      "title": "Ontology ID",
      "type": "array"
    },
    {
      "name": "standardsMappings",
      "description": "A mapping(s) to a published set of standard variables such as the NIH Common Data Elements program.\nOne or more mappings can be specified. \n\n[Autopopulated]\n",
      "title": "Standards Mappings",
      "type": "array"
    },
    {
      "name": "relatedConcepts",
      "description": "A set of published concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n\n[Autopopulated]\n",
      "title": "Related concepts",
      "type": "array"
    },
    {
      "name": "univarStats.median",
      "type": "number"
    },
    {
      "name": "univarStats.mean",
      "type": "number"
    },
    {
      "name": "univarStats.std",
      "type": "number"
    },
    {
      "name": "univarStats.min",
      "type": "number"
    },
    {
      "name": "univarStats.max",
      "type": "number"
    },
    {
      "name": "univarStats.mode",
      "type": "number"
    },
    {
      "name": "univarStats.count",
      "type": "integer"
    },
    {
      "name": "univarStats.twentyFifthPercentile",
      "type": "number"
    },
    {
      "name": "univarStats.seventyFifthPercentile",
      "type": "number"
    },
    {
      "name": "univarStats.categoricalMarginals",
      "type": "array"
    }
  ],
  "missingValues": [
    ""
  ]
}