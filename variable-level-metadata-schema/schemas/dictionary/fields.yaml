
_jsonSpec:
  "$schema": http://json-schema.org/draft-04/schema#
  "$id": vlmd-fields
title: HEAL Variable Level Metadata Fields
description: |
  Variable level metadata individual fields integrated into the variable level
  metadata object within the HEAL platform metadata service.
type: object
required:
  - name
  - description
properties:
  module: 
    type: string 
    title: Module (i.e., section,form,category)
    description: |
      Module (a place to put the section, form, or other broad category used 
      to group variables.
    examples:
      - Demographics
      - PROMIS
      - Substance use
      - Medical History
      - Sleep questions
      - Physical activity

  name:
    type: string
    title: Variable Name
    description: |
      The name of a variable (i.e., field) as it appears in the data.
  title:
    type: string
    title: Variable Label (ie Title)
    description: The human-readable title of the variable.
  description:
    type: string
    title: Variable Description
    description: An extended description of the variable.
    examples:
      - Definition
      - Question text (if a survey)
  type:
    title: Variable Type
    description: |
      A classification allowing the user (analyst, researcher or computer) to
      know how to use the variable
    $ref: "#/definitions/frictionlessTypes"
  format:
    title: Variable Format
    description: |
      Indicates the format of the type specified in the `type` property. This
      may describe the type of unit (such as for time fields like year or month)
      or the format of a date field (such as %y%m%d).
    $ref: "#/definitions/frictionlessFormats"
  constraints:
    type: object
    properties:
      maxLength:
        type: integer
        title: Maximum Length
        description: |
          Indicates the maximum length of an iterable (e.g., array, string, or
          object). For example, if 'Hello World' is the longest value of a
          categorical variable, this would be a maxLength of 11.
      enum:
        _jsonSpec:
          type: array
        _csvSpec:
          $ref: "#/definitions/csvArray"
        title: Variable Possible Values
        description:   Constrains possible values to a set of values.
      pattern:
        type: string
        title: Regular Expression Pattern
        description:   A regular expression pattern the data MUST conform to.
      maximum:
        type: integer
        title: Maximum Value
        description: |
          Specifies the maximum value of a field (e.g., maximum -- or most
          recent -- date, maximum integer etc). Note, this is different then
          maxLength property.
  encodings:
    title: 'Variable Value Encodings (i.e., mappings; value labels)'
    description: |
      Encodings (and mappings) allow categorical values to be stored as
      numerical values. IMPORTANT: the ==key should be the value represented IN
      the data== and the ==value should be the to-be-mapped label==. Many
      analytic software programs use numerical encodings and some algorithms
      only support numerical values. Additionally, this field provides a way to
      store categoricals that are stored as  "short" labels (such as
      abbreviations)
    _jsonSpec:
      type: object
      examples:
        - '{0:"No",1:"Yes"}'
        - '{"HW":"Hello world","GBW":"Good bye world","HM":"Hi, Mike"}'
    _csvSpec:
      $ref: "#/definitions/csvObject"
      examples:
        - '0=No|1=Yes'
        - 'HW=Hello world|GBW=Good bye world|HM=Hi,Mike'  
  ordered:
    title: An ordered variable
    description: |
      Indicates whether a categorical variable is ordered. This variable  is
      relevant for variables that have an ordered relationship but not
      necessarily  a numerical relationship (e.g., Strongly disagree < Disagree
      < Neutral < Agree).
    _jsonSpec:
      type: boolean
    _csvSpec:
      type: boolean
    
  missingValues:
    title: Missing Values
    description: A list of missing values specific to a variable.
    _jsonSpec:
      type: array
    _csvSpec:
      $ref: "#/definitions/csvArray"
  trueValues:
    title: Boolean True Value Labels
    description: |
      For boolean (true) variable (as defined in type field), this field allows
      a physical string representation to be cast as true (increasing
      readability of the field). It can include one or more values.
    _jsonSpec:
      type: array
      items:
        type: string
      examples:
        - Required
        - REQUIRED
        - required
        - 'Yes'
        - Checked"
    _csvSpec: 
      $ref: "#/definitions/csvArray"
      examples: 
        - "Required|REQUIRED"
        - "required|Yes|Y|Checked"
        - Checked
        - Required
  falseValues:
    title: Boolean False Value Labels
    description: |
      For boolean (false) variable (as defined in type field), this field allows
      a physical string representation to be cast as false (increasing
      readability of the field) that is not a standard false value. It can include one or more values.
    _jsonSpec:
      type: array
    _csvSpec:
      $ref: "#/definitions/csvArray"
  repo_link:
    type: string
    title: Variable Repository Link
    description: |
      A link to the variable as it exists on the home repository, if applicable
  cde_id:
    title: Common Data Element Id
    description: The source and id for the NIH Common Data Elements program.
    _jsonSpec:
      type: array
      items:
        type: object
        properties:
          source:
            type: string
          id:
            type: string
    _csvSpec:
      $ref: "#/definitions/csvObject"
  ontology_id:
    title: Ontology ID
    description: |
      Ontological information for the given variable as indicated  by the
      source, id, and relation to the specified classification. One or more
      ontology classifications can be specified. 
    _jsonSpec:
      type: array
      items:
        type: object
        properties:
          relation:
            type: string
          source:
            type: string
          id:
            type: string
    _csvSpec:
      type: string 
      pattern: "^(?:[^|=]*=){3}(?:[^|]*\\|[^|=]*=){2}[^|]*=(?:[^|]*\\|)?$"
  univar_stats:
    type: object
    properties:
      median:
        type: number
      mean:
        type: number
      std:
        type: number
      min:
        type: number
      max:
        type: number
      mode:
        type: number
      count:
        type: integer
        minimum: 0
      twenty_five_percentile:
        type: number
      seventy_five_percentile:
        type: number
      cat_marginals:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            count:
              type: integer
