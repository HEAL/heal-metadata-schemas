{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$id": "vlmd-fields",
    "title": "HEAL Variable Level Metadata Fields",
    "description": "Variable level metadata individual fields integrated into the variable level\nmetadata object within the HEAL platform metadata service.\n\n> Note, only `name` and `description` are required.\n>  Listed at the end of the description are suggested \"priority\" levels in brackets (e.g., [<priority>]):\n  1. [Required]: Needs to be filled out to be valid.\n  2. [Highly recommended]: Greatly help using the data dictionary but not required. \n  3. [Optional, if applicable]: May only be applicable to certain fields.\n  4. [Autopopulated, if not filled]: These fields are intended to be autopopulated from other fields but can be filled out if desired.\n  5. [Experimental]: These fields are not currently used but are in development.\n",
    "type": "object",
    "additionalProperties": true,
    "required": [
        "name",
        "description"
    ],
    "properties": {
        "module": {
            "type": "string",
            "title": "Module",
            "description": "The section, form, survey instrument, set of measures  or other broad category used \nto group variables.\n",
            "examples": [
                "Demographics",
                "PROMIS",
                "Substance use",
                "Medical History",
                "Sleep questions",
                "Physical activity"
            ]
        },
        "name": {
            "type": "string",
            "title": "Variable Name",
            "description": "The name of a variable (i.e., field) as it appears in the data. \n\n[Required]\n"
        },
        "title": {
            "type": "string",
            "title": "Variable Label (ie Title)",
            "description": "The human-readable title or label of the variable. \n\n[Highly recommended]\n",
            "examples": [
                "My Variable",
                "Gender identity"
            ]
        },
        "description": {
            "type": "string",
            "title": "Variable Description",
            "description": "An extended description of the variable. This could be the definition of a variable or the \nquestion text (e.g., if a survey). \n\n[Required]\n",
            "examples": [
                "The participant's age at the time of study enrollment",
                "What is the highest grade or level of school you have completed or the highest degree you have received?"
            ]
        },
        "type": {
            "title": "Variable Type",
            "description": "A classification or category of a particular data element or property expected or allowed in the dataset.\n\nDefinitions:\n\n-  `number` (A numeric value with optional decimal places. (e.g., 3.14))\n-  `integer` (A whole number without decimal places. (e.g., 42))\n-  `string` (A sequence of characters. (e.g., \\\"test\\\"))\n-  `any` (Any type of data is allowed. (e.g., true))\n-  `boolean` (A binary value representing true or false. (e.g., true))\n-  `date` (A specific calendar date. (e.g., \\\"2023-05-25\\\"))\n-  `datetime` (A specific date and time, including timezone information. (e.g., \\\"2023-05-25T10:30:00Z\\\"))\n-  `time` (A specific time of day. (e.g., \\\"10:30:00\\\"))\n-  `year` (A specific year. (e.g., 2023)\n-  `yearmonth` (A specific year and month. (e.g., \\\"2023-05\\\"))\n-  `duration` (A length of time. (e.g., \\\"PT1H\\\")\n-  `geopoint` (A pair of latitude and longitude coordinates. (e.g., [51.5074, -0.1278]))\n",
            "type": "string",
            "enum": [
                "number",
                "integer",
                "string",
                "any",
                "boolean",
                "date",
                "datetime",
                "time",
                "year",
                "yearmonth",
                "duration",
                "geopoint"
            ]
        },
        "format": {
            "title": "Variable Format",
            "description": "Indicates the format of the type specified in the `type` property.\n\nEach format is dependent on the `type` specified. For example:\nIf `type` is \"string\", then see the String formats. \nIf `type` is one of the date-like formats, then see Date formats.\n\nSources:\n\n- [Frictionless standard formats associated with types](https://specs.frictionlessdata.io/table-schema/#types-and-formats)\n",
            "anyOf": [
                {
                    "title": "String Formats",
                    "description": "A format for a specialized type of string of:\n\n- \"`email` if valid emails (e.g., test@gmail.com)\"\n- \"`uri` if valid uri addresses (e.g., https://example.com/resource123)\"\n- \"`binary` if a base64 binary encoded string (e.g., authentication token like aGVsbG8gd29ybGQ=)\"\n- \"`uuid` if a universal unique identifier also known as a guid (eg., f47ac10b-58cc-4372-a567-0e02b2c3d479)\"\n",
                    "enum": [
                        "uri",
                        "email",
                        "binary",
                        "uuid"
                    ]
                },
                {
                    "title": "Date Formats",
                    "type": "string",
                    "description": "A format for a date variable (`date`,`time`,`datetime`).  \n    **default**: An ISO8601 format string.\n    **any**: Any parsable representation of a date/time/datetime. The implementing library can attempt to parse the datetime via a range of strategies.\n\n**{PATTERN}**: The value can be parsed according to `{PATTERN}`,\n which `MUST` follow the date formatting syntax of \n C / Python [strftime](http://strftime.org/) such as:\n\n- \"`%Y-%m-%d` (for date, e.g., 2023-05-25)\"\n- \"`%Y%-%d` (for date, e.g., 20230525) for date without dashes\"\n- \"`%Y-%m-%dT%H:%M:%S` (for datetime, e.g., 2023-05-25T10:30:45)\"\n- \"`%Y-%m-%dT%H:%M:%SZ` (for datetime with UTC timezone, e.g., 2023-05-25T10:30:45Z)\"\n- \"`%Y-%m-%dT%H:%M:%S%z` (for datetime with timezone offset, e.g., 2023-05-25T10:30:45+0300)\"\n- \"`%Y-%m-%dT%H:%M` (for datetime without seconds, e.g., 2023-05-25T10:30)\"\n- \"`%Y-%m-%dT%H` (for datetime without minutes and seconds, e.g., 2023-05-25T10)\"\n- \"`%H:%M:%S` (for time, e.g., 10:30:45)\"\n- \"`%H:%M:%SZ` (for time with UTC timezone, e.g., 10:30:45Z)\"\n- \"`%H:%M:%S%z` (for time with timezone offset, e.g., 10:30:45+0300)\"\n"
                },
                {
                    "title": "Geopoint Format",
                    "type": "string",
                    "description": "The two types of formats for `geopoint` (describing a geographic point).\n\n- `array` (if 'lat,long' (e.g., 36.63,-90.20))\n- `object` (if {'lat':36.63,'lon':-90.20})\n",
                    "enum": [
                        "array",
                        "object"
                    ]
                },
                {
                    "title": "Geojson Formats",
                    "type": "string",
                    "description": "The JSON object according to the geojson spec.",
                    "enum": [
                        "topojson",
                        "default"
                    ]
                }
            ]
        },
        "constraints.maxLength": {
            "type": "integer",
            "title": "Maximum Length",
            "description": "Indicates the maximum length of an iterable (e.g., array, string, or\nobject). For example, if 'Hello World' is the longest value of a\ncategorical variable, this would be a maxLength of 11.\n\n[Optional,if applicable]\n"
        },
        "constraints.enum": {
            "title": "Variable Possible Values",
            "description": "Constrains possible values to a set of values.\n\n[Optional,if applicable]\n",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$",
            "examples": [
                "1|2|3|4|5|6|7|8",
                "White|Black or African American|American Indian or Alaska Native|Native Hawaiian or Other Pacific Islander|Asian|Some other race|Multiracial"
            ]
        },
        "constraints.pattern": {
            "type": "string",
            "title": "Regular Expression Pattern",
            "description": "A regular expression pattern the data MUST conform to.\n\n[Optional,if applicable]\n"
        },
        "constraints.maximum": {
            "type": "integer",
            "title": "Maximum Value",
            "description": "Specifies the maximum value of a field (e.g., maximum -- or most\nrecent -- date, maximum integer etc). Note, this is different then\nmaxLength property.\n\n[Optional,if applicable]\n"
        },
        "constraints.minimum": {
            "type": "integer",
            "title": "Minimum Value",
            "description": "Specifies the minimum value of a field.\n\n[Optional,if applicable]\n"
        },
        "encodings": {
            "title": "Variable Value Encodings (i.e., mappings; value labels)",
            "description": "Variable value encodings provide a way to further annotate any value within a any variable type,\nmaking values easier to understand. \n\n\nMany analytic software programs (e.g., SPSS,Stata, and SAS) use numerical encodings and some algorithms\nonly support numerical values. Encodings (and mappings) allow categorical values to be stored as\nnumerical values.\n\nAdditionally, as another use case, this field provides a way to\nstore categoricals that are stored as  \"short\" labels (such as\nabbreviations).\n\n[Optional,if applicable]\n",
            "type": "string",
            "pattern": "^(?:.*?=.*?(?:\\||$))+$",
            "examples": [
                "0=No|1=Yes",
                "HW=Hello world|GBW=Good bye world|HM=Hi,Mike"
            ]
        },
        "ordered": {
            "title": "An ordered variable",
            "description": "Indicates whether a categorical variable is ordered. This variable  is\nrelevant for variables that have an ordered relationship but not\nnecessarily  a numerical relationship (e.g., Strongly disagree < Disagree\n< Neutral < Agree).\n\n[Optional,if applicable]\n",
            "type": "boolean"
        },
        "missingValues": {
            "title": "Missing Values",
            "description": "A list of missing values specific to a variable.\n\n[Optional, if applicable]\n",
            "examples": [
                "Missing|Skipped|No preference",
                "Missing"
            ],
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
        },
        "trueValues": {
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$",
            "description": "For boolean (true) variable (as defined in type field), this field allows\na physical string representation to be cast as true (increasing\nreadability of the field). It can include one or more values.\n\n[Optional, if applicable]\n",
            "examples": [
                "Required|REQUIRED",
                "required|Yes|Y|Checked",
                "Checked",
                "Required"
            ]
        },
        "falseValues": {
            "title": "Boolean False Value Labels",
            "description": "For boolean (false) variable (as defined in type field), this field allows\na physical string representation to be cast as false (increasing\nreadability of the field) that is not a standard false value. It can include one or more values.\n",
            "type": "string",
            "pattern": "^(?:[^|]+\\||[^|]*)(?:[^|]*\\|)*[^|]*$"
        },
        "repo_link": {
            "type": "string",
            "title": "Variable Repository Link",
            "description": "A link to the variable as it exists on the home repository, if applicable\n"
        },
        "standardsMappings.url": {
            "title": "Standards Mapping - Url",
            "description": "The url that links out to the published, standardized mapping.\n\n[Autopopulated, if not filled]\n",
            "type": "string",
            "format": "uri",
            "examples": [
                "https://cde.nlm.nih.gov/deView?tinyId=XyuSGdTTI"
            ]
        },
        "standardsMappings.type": {
            "title": "Standards Mapping - Title",
            "description": "The **type** of mapping linked to a published set of standard variables such as the NIH Common Data Elements program.\n[Autopopulated, if not filled]\n",
            "examples": [
                "cde",
                "ontology",
                "reference_list"
            ],
            "type": "string"
        },
        "standardsMappings.label": {
            "title": "Standards Mapping - Label",
            "description": "A free text **label** of a mapping indicating a mapping(s) to a published set of standard variables such as the NIH Common Data Elements program.\n\n[Autopopulated, if not filled]\n",
            "type": "string",
            "examples": [
                "substance use",
                "chemical compound",
                "promis"
            ]
        },
        "standardsMappings.source": {
            "title": "Standard Mapping - Source",
            "description": "The source of the standardized variable.\n",
            "type": "string",
            "examples": [
                "TBD (will have controlled vocabulary)"
            ]
        },
        "standardsMappings.id": {
            "title": "Standard Mapping - Id",
            "type": "string",
            "description": "The id locating the individual mapping within the given source.\n"
        },
        "relatedConcepts.url": {
            "title": "Related Concepts - Url",
            "description": "The url that links out to the published, standardized concept.\n\n[Autopopulated, if not filled]\n",
            "type": "string",
            "format": "uri",
            "examples": [
                "https://cde.nlm.nih.gov/deView?tinyId=XyuSGdTTI"
            ]
        },
        "relatedConcepts.type": {
            "title": "Related concepts - Type",
            "description": "The **type** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n\n[Autopopulated, if not filled]\n",
            "type": "string"
        },
        "relatedConcepts.label": {
            "type": "string",
            "title": "Related Concepts - Label",
            "description": "A free text **label** of mapping to a published set of concepts related to the given field such as \nontological information (eg., NCI thesaurus, bioportal etc)\n\n[Autopopulated, if not filled]\n"
        },
        "relatedConcepts.source": {
            "title": "Related Concepts - Source",
            "description": "The source of the related concept.\n\n[Autopopulated, if not filled]\n",
            "type": "string",
            "examples": [
                "TBD (will have controlled vocabulary)"
            ]
        },
        "relatedConcepts.id": {
            "title": "Related Concepts - Id",
            "type": "string",
            "description": "The id locating the individual mapping within the given source.\n\n[Autopopulated, if not filled]\n"
        },
        "univarStats.median": {
            "type": "number"
        },
        "univarStats.mean": {
            "type": "number"
        },
        "univarStats.std": {
            "type": "number"
        },
        "univarStats.min": {
            "type": "number"
        },
        "univarStats.max": {
            "type": "number"
        },
        "univarStats.mode": {
            "type": "number"
        },
        "univarStats.count": {
            "type": "integer",
            "minimum": 0
        },
        "univarStats.twentyFifthPercentile": {
            "type": "number"
        },
        "univarStats.seventyFifthPercentile": {
            "type": "number"
        },
        "univarStats.categoricalMarginals.name": {
            "type": "string"
        },
        "univarStats.categoricalMarginals.count": {
            "type": "integer"
        }
    }
}